{"ast":null,"code":"var _jsxFileName = \"/Users/m-takase/myhome/ReactHandOn/chap8/graph-ql/src/App.js\";\nimport { GraphQLClient } from \"graphql-request\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst query = `\n  query findRange($login:String!) {\n    user(login:$login) {\n      login\n      name\n      location\n      avatar_url: avatarUrl\n      repositories(first:100)\n      totalCount\n      nodes {\n        name\n      }\n    }\n  }\n`;\nconst client = new GraphQLClient(\"https://api.github.com/graphql\", {\n  headers: {\n    Authorization: `Bearer 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`\n  }\n});\nclient.request(query, {\n  login: \"moontahoe\"\n}).then(results => JSON.stringify(results, null, 2)).then(console.log).catch(console.error);\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/m-takase/myhome/ReactHandOn/chap8/graph-ql/src/App.js"],"names":["GraphQLClient","query","client","headers","Authorization","request","login","then","results","JSON","stringify","console","log","catch","error","App"],"mappings":";AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAO,WAAP;;AAEA,MAAMC,KAAK,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAMC,MAAM,GAAG,IAAIF,aAAJ,CAAkB,gCAAlB,EAAoD;AAC/DG,EAAAA,OAAO,EAAE;AACLC,IAAAA,aAAa,EAAG;AADX;AADsD,CAApD,CAAf;AAMAF,MAAM,CACDG,OADL,CACaJ,KADb,EACoB;AAAEK,EAAAA,KAAK,EAAE;AAAT,CADpB,EAEKC,IAFL,CAEWC,OAAD,IAAaC,IAAI,CAACC,SAAL,CAAeF,OAAf,EAAwB,IAAxB,EAA8B,CAA9B,CAFvB,EAGKD,IAHL,CAGUI,OAAO,CAACC,GAHlB,EAIKC,KAJL,CAIWF,OAAO,CAACG,KAJnB;;AAMA,SAASC,GAAT,GAAe;AACX,sBAAO;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAFQA,G;AAIT,eAAeA,GAAf","sourcesContent":["import { GraphQLClient } from \"graphql-request\";\nimport \"./App.css\";\n\nconst query = `\n  query findRange($login:String!) {\n    user(login:$login) {\n      login\n      name\n      location\n      avatar_url: avatarUrl\n      repositories(first:100)\n      totalCount\n      nodes {\n        name\n      }\n    }\n  }\n`;\n\nconst client = new GraphQLClient(\"https://api.github.com/graphql\", {\n    headers: {\n        Authorization: `Bearer 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`,\n    },\n});\n\nclient\n    .request(query, { login: \"moontahoe\" })\n    .then((results) => JSON.stringify(results, null, 2))\n    .then(console.log)\n    .catch(console.error);\n\nfunction App() {\n    return <div className=\"App\"></div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}