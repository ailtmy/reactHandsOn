{"ast":null,"code":"var _jsxFileName = \"/Users/m-takase/myhome/ReactHandOn/chap8/graph-ql/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport { GraphQLClient } from \"graphql-request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst query = `\n  query findRepos($login:String!) {\n    user(login:$login) {\n      login\n      name\n      location\n      avatar_url: avatarUrl\n      repositories(first:100) {\n        totalCount\n        nodes {\n          name\n        }\n      }\n    }\n  }\n`;\nconst client = new GraphQLClient(\"https://api.github.com/graphql\", {\n  headers: {\n    Authorization: `Bearer <PERSONAL ACCESS TOKEN>`\n  }\n});\n\nfunction UserDetails(data) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"githubUser\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.avatar_url,\n      alt: data.login,\n      style: {\n        width: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: data.login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), data.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 31\n      }, this), data.location && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = UserDetails;\n\nfunction List(_ref) {\n  let {\n    data = [],\n    renderItem,\n    renderEmpty\n  } = _ref;\n  return !data.length ? renderEmpty : /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: data.map((item, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: renderItem(item)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = List;\nexport default function App() {\n  _s();\n\n  const [login, setLogin] = useState(\"moontahoe\");\n  const [userData, setUserData] = useState();\n  useEffect(() => {\n    client.request(query, {\n      login\n    }).then(_ref2 => {\n      let {\n        user\n      } = _ref2;\n      return user;\n    }).then(setUserData).catch(console.error);\n  }, [client, query, login]);\n  if (!userData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 27\n  }, this);\n  console.log(userData);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n      value: login,\n      onSearch: setLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserDetails, { ...userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      data: userData.repositories.nodes,\n      renderItem: repo => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: repo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"MmgrVTccF0Btt38Uc3sB3D2RdZ8=\");\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UserDetails\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/m-takase/myhome/ReactHandOn/chap8/graph-ql/src/App.js"],"names":["React","useState","useEffect","SearchForm","GraphQLClient","query","client","headers","Authorization","UserDetails","data","avatar_url","login","width","name","location","List","renderItem","renderEmpty","length","map","item","i","App","setLogin","userData","setUserData","request","then","user","catch","console","error","log","repositories","nodes","repo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"./SearchForm\";\nimport { GraphQLClient } from \"graphql-request\";\n\nconst query = `\n  query findRepos($login:String!) {\n    user(login:$login) {\n      login\n      name\n      location\n      avatar_url: avatarUrl\n      repositories(first:100) {\n        totalCount\n        nodes {\n          name\n        }\n      }\n    }\n  }\n`;\n\nconst client = new GraphQLClient(\"https://api.github.com/graphql\", {\n    headers: {\n        Authorization: `Bearer <PERSONAL ACCESS TOKEN>`,\n    },\n});\n\nfunction UserDetails(data) {\n    return (\n        <div className=\"githubUser\">\n            <img\n                src={data.avatar_url}\n                alt={data.login}\n                style={{ width: 200 }}\n            />\n            <div>\n                <h1>{data.login}</h1>\n                {data.name && <p>{data.name}</p>}\n                {data.location && <p>{data.location}</p>}\n            </div>\n        </div>\n    );\n}\n\nfunction List({ data = [], renderItem, renderEmpty }) {\n    return !data.length ? (\n        renderEmpty\n    ) : (\n        <ul>\n            {data.map((item, i) => (\n                <li key={i}>{renderItem(item)}</li>\n            ))}\n        </ul>\n    );\n}\n\nexport default function App() {\n    const [login, setLogin] = useState(\"moontahoe\");\n    const [userData, setUserData] = useState();\n\n    useEffect(() => {\n        client\n            .request(query, { login })\n            .then(({ user }) => user)\n            .then(setUserData)\n            .catch(console.error);\n    }, [client, query, login]);\n\n    if (!userData) return <p>loading...</p>;\n    console.log(userData);\n    return (\n        <>\n            <SearchForm value={login} onSearch={setLogin} />\n            <UserDetails {...userData} />\n            <List\n                data={userData.repositories.nodes}\n                renderItem={(repo) => <span>{repo.name}</span>}\n            />\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}