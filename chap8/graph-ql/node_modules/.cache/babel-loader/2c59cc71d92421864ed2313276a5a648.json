{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar extract_files_1 = require(\"extract-files\");\n\nvar form_data_1 = __importDefault(require(\"form-data\"));\n/**\n * Duck type if NodeJS stream\n * https://github.com/sindresorhus/is-stream/blob/3750505b0727f6df54324784fe369365ef78841e/index.js#L3\n */\n\n\nvar isExtractableFileEnhanced = function (value) {\n  return extract_files_1.isExtractableFile(value) || value !== null && typeof value === 'object' && typeof value.pipe === 'function';\n};\n/**\n * Returns Multipart Form if body contains files\n * (https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Otherwise returns JSON\n */\n\n\nfunction createRequestBody(query, variables, operationName) {\n  var _a = extract_files_1.extractFiles({\n    query: query,\n    variables: variables,\n    operationName: operationName\n  }, '', isExtractableFileEnhanced),\n      clone = _a.clone,\n      files = _a.files;\n\n  if (files.size === 0) {\n    if (!Array.isArray(query)) {\n      return JSON.stringify(clone);\n    }\n\n    if (typeof variables !== 'undefined' && !Array.isArray(variables)) {\n      throw new Error('Cannot create request body with given variable type, array expected');\n    } // Batch support\n\n\n    var payload = query.reduce(function (accu, currentQuery, index) {\n      accu.push({\n        query: currentQuery,\n        variables: variables ? variables[index] : undefined\n      });\n      return accu;\n    }, []);\n    return JSON.stringify(payload);\n  }\n\n  var Form = typeof FormData === 'undefined' ? form_data_1.default : FormData;\n  var form = new Form();\n  form.append('operations', JSON.stringify(clone));\n  var map = {};\n  var i = 0;\n  files.forEach(function (paths) {\n    map[++i] = paths;\n  });\n  form.append('map', JSON.stringify(map));\n  i = 0;\n  files.forEach(function (paths, file) {\n    form.append(\"\" + ++i, file);\n  });\n  return form;\n}\n\nexports.default = createRequestBody;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;AAIA;;;;;;AAIA,IAAMA,yBAAyB,GAAG,UAACC,KAAD,EAAW;AAC3C,2CAAkBA,KAAlB,KACCA,KAAK,KAAK,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAnC,IAA+C,OAAOA,KAAK,CAACC,IAAb,KAAsB,UADtE;AACiF,CAFnF;AAIA;;;;;;;AAKA,SAAwBC,iBAAxB,CACEC,KADF,EAEEC,SAFF,EAGEC,aAHF,EAGwB;AAEhB,WAAmBC,6BAAa;AAAEH,SAAK,OAAP;AAASC,aAAS,WAAlB;AAAoBC,iBAAa;AAAjC,GAAb,EAAkD,EAAlD,EAAsDN,yBAAtD,CAAnB;AAAA,MAAEQ,KAAK,WAAP;AAAA,MAASC,KAAK,WAAd;;AAEN,MAAIA,KAAK,CAACC,IAAN,KAAe,CAAnB,EAAsB;AACpB,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcR,KAAd,CAAL,EAA2B;AACzB,aAAOS,IAAI,CAACC,SAAL,CAAeN,KAAf,CAAP;AACD;;AAED,QAAI,OAAOH,SAAP,KAAqB,WAArB,IAAoC,CAACM,KAAK,CAACC,OAAN,CAAcP,SAAd,CAAzC,EAAmE;AACjE,YAAM,IAAIU,KAAJ,CAAU,qEAAV,CAAN;AACD,KAPmB,CASpB;;;AACA,QAAMC,OAAO,GAAGZ,KAAK,CAACa,MAAN,CACd,UAACC,IAAD,EAAOC,YAAP,EAAqBC,KAArB,EAA0B;AACxBF,UAAI,CAACG,IAAL,CAAU;AAAEjB,aAAK,EAAEe,YAAT;AAAuBd,iBAAS,EAAEA,SAAS,GAAGA,SAAS,CAACe,KAAD,CAAZ,GAAsBE;AAAjE,OAAV;AACA,aAAOJ,IAAP;AACD,KAJa,EAKd,EALc,CAAhB;AAQA,WAAOL,IAAI,CAACC,SAAL,CAAeE,OAAf,CAAP;AACD;;AAED,MAAMO,IAAI,GAAG,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,mBAAlC,GAAiDD,QAA9D;AAEA,MAAME,IAAI,GAAG,IAAIH,IAAJ,EAAb;AAEAG,MAAI,CAACC,MAAL,CAAY,YAAZ,EAA0Bd,IAAI,CAACC,SAAL,CAAeN,KAAf,CAA1B;AAEA,MAAMoB,GAAG,GAAgC,EAAzC;AACA,MAAIC,CAAC,GAAG,CAAR;AACApB,OAAK,CAACqB,OAAN,CAAc,UAACC,KAAD,EAAM;AAClBH,OAAG,CAAC,EAAEC,CAAH,CAAH,GAAWE,KAAX;AACD,GAFD;AAGAL,MAAI,CAACC,MAAL,CAAY,KAAZ,EAAmBd,IAAI,CAACC,SAAL,CAAec,GAAf,CAAnB;AAEAC,GAAC,GAAG,CAAJ;AACApB,OAAK,CAACqB,OAAN,CAAc,UAACC,KAAD,EAAQC,IAAR,EAAY;AACxBN,QAAI,CAACC,MAAL,CAAY,KAAG,EAAEE,CAAjB,EAAsBG,IAAtB;AACD,GAFD;AAIA,SAAON,IAAP;AACD;;AA/CDO","names":["isExtractableFileEnhanced","value","pipe","createRequestBody","query","variables","operationName","extract_files_1","clone","files","size","Array","isArray","JSON","stringify","Error","payload","reduce","accu","currentQuery","index","push","undefined","Form","FormData","form_data_1","form","append","map","i","forEach","paths","file","exports"],"sources":["../src/createRequestBody.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}